<!--
     Copyright (C) 2018 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>
    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Older rotation sensors are not setting event.timestamp correctly. Setting to
         true will use SystemClock.elapsedRealtimeNanos() to set timestamp. -->
    <bool name="config_useSystemClockforRotationSensor">false</bool>

    <!-- The list of components which should be automatically disabled. -->
    <string-array name="config_disabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Whether to persist the notification for when a usb drive device is plugged in -->
    <bool name="config_persistUsbDriveNotification">false</bool>

    <!-- Certain sensor firmwares break with having a batch
         size set. By setting this to false, devices can opt
         out of setting a batch size, which fixes rotation. -->
    <bool name="config_useDefaultBatchingForAccel">true</bool>

    <!-- Path to the library that contains a device specific key handler -->
    <string name="config_deviceKeyHandlerLib" translatable="false"></string>
    <!-- Name of that key handler class -->
    <string name="config_deviceKeyHandlerClass" translatable="false"></string>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- True if the gesture service should be started at system start -->
    <bool name="config_enableGestureService">false</bool>

    <!-- Whether notify fingerprint client of successful cancelled authentication -->
    <bool name="config_notifyClientOnFingerprintCancelSuccess">false</bool>

    <!-- Full screen aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">false</bool>
    <item name="config_screenAspectRatio" format="float" type="dimen">2.1</item>

    <integer name="config_buttonBrightnessSettingDefault">120</integer>
    <bool name="config_deviceHasVariableButtonBrightness">false</bool>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Whether to show emergency button in power menu -->
    <bool name="config_showEmergencyButtonInPowerMenu">false</bool>

    <!-- If this is true, key chords can be used to take a screen record on the device. -->
    <bool name="config_enableScreenrecordChord">true</bool>

    <!-- The list of vendor package signatures that should also be considered
       platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
    </string-array>

    <!-- The second metric to be used for antenna bar display for LTE
         The metrics to be used for Antenna display is based on RSRP and either one of the
           0. RSSNR
           1. RSRQ
    -->
    <integer name="config_LTE_antenna_bar_quantity_metric">0</integer>

    <!-- Flag indicating whether strict threshold is used, or lenient threshold is used,
          when evaluating RSRP for LTE antenna bar display
           0. Strict threshold
           1. Lenient threshold
    -->
    <integer name="config_LTE_RSRP_threshold_type">0</integer>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">true</bool>

     <!-- Does the battery LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">true</bool>

    <!-- Does the notification LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorNotificationLed">true</bool>

     <!-- Do the battery/notification LEDs support pulsing?
         Used to decide if we show pulse settings -->
    <bool name="config_ledCanPulse">true</bool>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

   <!-- Whether device has turbo power charging support -->
    <bool name="config_hasTurboPowerCharger">false</bool>

     <!-- Component name for the activity that will be presenting the Oreo's Recents UI -->
    <string name="config_recentsComponentNameOreo" translatable="false">com.android.systemui/.recents.RecentsActivity</string>

    <!-- True if the notification's dynamic app icon/title tint should be optimised for dark
    backgrounds (requires config_allowNotificationIconTextTinting to be true)-->
    <bool name="config_useDarkBgNotificationTinting_override">false</bool>
    <bool name="config_notificationTinting_override">false</bool>

    <!-- Ambient display music ticker -->
    <bool name="config_canForceDozeNotifications">true</bool>

    <!-- Whether the device has outdated qti-telephony-common.jar -->
    <bool name="config_oldQtiTelephony">true</bool>

    <!-- Any package that has one of the package names defined below will be prevented
         from using specific sensors in order to stop battery drain -->
	<string-array name="config_blockPackagesSensorDrain">
      <item>com.whatsapp</item>
      <item>com.gbwhatsapp</item>
      <item>com.yowhatsapp</item>
      <item>com.whatsapp.plus</item>
      <item>org.telegram.messenger</item>
      <item>org.telegram.messenger.plus</item>
      <item>com.snapchat.android</item>
      </string-array>

    <!-- Whether device ignores the RSSNR signal implementation -->
    <bool name="config_ignoreRssnrSignalLevel">false</bool>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_enableSmartPixels">false</bool>

    <!-- Smart charging battery percentage -->
    <integer name="config_smartChargingBatteryLevel">80</integer>
    <integer name="config_smartChargingBatteryResumeLevel">60</integer>

    <!-- Smart charge sysfs node and value for suspend/resume charging-->
    <string name="config_SmartChargingSysfsNode" translatable="false">/sys/class/power_supply/battery/charging_enabled</string>
    <string name="config_SmartChargingSupspendValue" translatable="false">0</string>
    <string name="config_SmartChargingResumeValue" translatable="false">1</string>

    <!-- Whether device has a physical display cutout -->
    <bool name="config_physicalDisplayCutout">false</bool>

    <!-- Default values for LiveDisplay -->
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">0</integer>

    <!-- These values should map to the true min and max
         that the backend is capable of adjusting to. This
         is more important when using the ColorBalance mode,
         as the discrete adjustment is interpolated between
         this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">true</bool>

    <!-- Display mode remapping table.
         If the mode names returned by the backend do not match
         the predefined and translated strings in the Settings
         app, they can be remapped here. The format is
         "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
    </string-array>

    <!-- Should we filter any display modes which are unampped? -->
    <bool name="config_filterDisplayModes">false</bool>

    <!-- Value for overriding outdoor capable mode for LiveDisplay tile -->
    <bool name="config_outdoorCapable">false</bool>

    <!-- Time to give to the proximity sensor before toggling the flashlight with the Power button.
    Set to -1 to disable the proximity sensor check at all-->
    <integer name="config_flashlightProximityTimeout">300</integer>

    <!-- minimal way before long swipe will get accepted - in dp -->
    <integer name="nav_gesture_swipe_min_length">60</integer>
    <!-- time in ms that needs to pass before trigger the action -->
    <integer name="nav_gesture_swipe_timout">250</integer>
    <!-- signification move threshold - if stays below will trigger action -->
    <integer name="nav_gesture_move_threshold">4</integer>

    <!-- Whether to show a custom view for FOD -->
    <bool name="config_needCustomFODView">false</bool>

    <!-- Whether device supports internal audio recording -->
    <bool name="config_hasInternalAudioRecordingSupport">true</bool>
</resources>
